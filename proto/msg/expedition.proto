package msg.expedition;
enum Result {
    success = 0;
    not_challenge_times = 1;        //挑战次数不足
    not_search_times = 2;           //搜索(刷新)次数不足
    error_enemy_id = 3;             //挑战id不对
    repeat_challenge = 4;           //不能重复挑战同一个对象
    resource_not_enough = 5;        //资源不足
    top_search_times = 6;           //今天已经到顶了
    top_challenge_times = 7;
    season_not_open = 8;            //赛季未开始
    season_countdown = 9;           //赛季处于倒计时状态
    season_truce = 10;              //赛季处于休战状态
    weapons_not_enough = 11;         //宿命武器不足，无法开启天梯赛
}

//搜索  如果是第一次参加天梯活动(没有缓冲数据),则返回搜索后的数据,否则返回缓冲的数据
//如果想要刷新数据,请调用下面的RefreshExpeditionSearch
message QueryExpedition{

}

message TargetPlayInfo {
    optional string user_id = 1;
    optional string leader_name = 2;
    repeated int32  template_id_list = 3;
}

message Enemy{
    optional string leader_name = 1;          //显示名称
    optional int32  battle_point = 2;         //当前战力
    optional int32  cur_group = 3;            //当前组
    optional int32  enemy_id = 4;             //敌人的ID  1~3
    repeated int32  template_id_list = 5;  
    optional int32 speed = 6;
    optional int32 defense = 7;
    optional int32 dodge = 8;
    optional int32 authority = 9;
}

message RewardInfo {
    required int32 reward_type = 1;
    required int32 param1 = 2;
    required int32 param2 = 3;
}

message SeasonRewardItem{
    optional int32 ID = 1;
    optional int32 group_type = 2;
    optional int32 max_rank = 3;
    optional int32 min_rank = 4;
    repeated RewardInfo reward_info = 5;
}

message QueryExpeditionRet{
    required Result result = 1;
    repeated Enemy enemys = 2;                  //搜索三个可挑战的选手
    optional int32 reduce_search_times = 3;     //剩余搜索的次数
    optional int32 reduce_challenge_times = 4;  //剩余挑战的次数
    optional int32 buy_search_times = 5;        //已经购买的搜索次数
    optional int32 buy_challenge_times = 6;     //已经购买的挑战次数
    optional int32 ladder_core = 7;             //当前积分
    optional int32 group = 8;                   //当前组
    optional float winner_percent = 9;          //胜率 小数  
    optional int32 fight_times = 10;            //总共战斗次数 
    optional int32 season_begin_time = 11;      //赛季开始时间(格林威治时间)
    optional int32 countdown = 12;              //倒计时时间(间隔/小时)
    optional int32 duration = 13;               //战斗时间(间隔/小时)
    optional int32 truce = 14;                  //休战时间(间隔/小时)
    optional bool  is_close_tab = 15;           //玩家该赛季是否关闭过公告
    repeated SeasonRewardItem reward_list = 16; //赛季结算奖励表
    optional int32 pre_group = 17;              //上个赛季中的组    //上个赛季没有参赛则不返回上个赛季的组别以及排名信息  
    optional int32 pre_rank = 18;               //上个赛季的排名  
    
}

message ExpeditionFight{
    required int32 enemy_id = 1;
}

message ExpeditionFightRet {
    required Result result = 1;
    optional bool is_winner = 2;
    optional string battle_property = 3;      //战斗属性
    repeated int32 battle_record = 4;         //战斗结果
    optional TargetPlayInfo target_info = 5;  
    repeated Enemy enemys = 6;                //刷新的挑战对手
    optional int32 reduce_challenge_times = 7;   //剩余挑战的次数
    optional int32 ladder_core = 8;           //当前积分
    optional float winner_percent = 9;        //胜率  小数
    optional int32 fight_times = 10;          //总共战斗次数  
    optional int32 group = 11;                //当前组
    repeated RewardInfo reward_list = 12;
}

//刷新对手
message RefreshExpeditionSearch{
    
}

message RefreshExpeditionSearchRet{
    required Result result = 1;
    repeated Enemy enemys = 2;                 //搜索三个可挑战的选手
    optional int32 reduce_search_times = 3;    //剩余搜索次数
}

message ExpeditionApendTimes{
    required int32 type = 1;
    required int32 num = 2;
}

message ExpeditionApendTimesRet{
    required Result result = 1;
    required int32 type = 2;
    required int32 num = 3;
}

message RankInfo{
    optional string leader_name = 1;
    optional int32  leader_template_id = 2;
    optional int32  max_bp = 3;                            
    optional int32 ladder_core = 4;                           
    optional float group = 5;                        
    optional int32 fight_times = 6;                          
    optional int32 winner_percent = 7;  
    optional int32 rank = 8;                                                  
}

message GetExpeditionRank{

}

//显示当前段位排行榜信息
message GetExpeditionRankRet{ 
    repeated RankInfo rank_info = 1;          //某个段位的排行榜 数组顺序就是排名顺序
    optional RankInfo my_rank = 2;
}
//标记用户该赛季是否已经关闭过赛季弹框
message PlayerClickTab{
    
}
message PlayerClickTabRet{
    required Result result = 1;
}










