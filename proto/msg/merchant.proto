package msg.merchant;

enum Result {
	success = 1;
	not_enough_resource = 2;
	order_not_finish = 3;
	failure = 4;
	not_enough_all_num = 5;
}

message RewardInfo
{
    required int32 reward_type = 1;
    required int32 param1 = 2;
    required int32 param2 = 3;
}

message Query {
}

message Order {
	required int32 order_id = 1;
	required int32 merchant_type = 2;
	required int32 need_type1 = 3;
	required int32 need_num1 = 4;
	repeated RewardInfo reward_info = 5;
	required bool is_done = 6;
	optional int32 need_type2 = 7;
	optional int32 need_num2 = 8;
}

message QueryRet {
	repeated Order order_list = 1;
	required int32 reset_time = 2;
	required int32 ext_soul_chip = 3;
	required bool ext_soul_chip_flag = 4;
	required int32 chest_key_id = 5;
	required int32 chest_key_num = 6;
	required int32 buy_refresh_times = 7;
	optional int32 drak_merchant_refresh_time = 8;
}

message Exchange {
	required int32 merchant_type = 1;
	required int32 order_id = 2;
}

message ExchangeRet {
	required Result result = 1;
	required int32 merchant_type = 2;
	optional int32 order_id = 3;
}

message SoulChip {
}

message SoulChipRet {
	required Result result = 1;
	optional int32 chest_key_id = 2;
    optional int32 chest_key_num = 3;
}

message ResetList {
    required int32 merchant_type = 1;
}

message ResetListRet {
	required Result result = 1;
	repeated Order order_list = 2;
	required int32 reset_time = 3;
	optional int32 ext_soul_chip = 4;
	optional bool ext_soul_chip_flag = 5;
	optional int32 chest_key_id = 6;
	optional int32 chest_key_num = 7;
	optional int32 buy_refresh_times = 8;
	optional int32 drak_merchant_refresh_time = 9;
}

