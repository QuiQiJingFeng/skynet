package msg.user;

enum Result {
	success = 0;
	invalid_name = 1;
	repeat_name = 2;
	not_enough_resource = 3;
	invalid_account = 4;
	invalid_pwd = 5;
	failure = 6;
}

message CreateLeader {
	required string name = 1;
	required int32 mercenary_id = 2;
	required string channel = 3;
	required string device_id = 4;
	required string device_type = 5;
}


message CreateLeaderRet {
	required Result result = 1;
	required string name = 2;
}

message Query {

}

message QueryRet {
	required string leader_name = 1;
	required int32 leader_bp = 2;
	required int32 permanent_mark = 3;
	required int32 cur_rank = 4;
	required int32 arena_refresh_time = 5;
	required int32 check_in_mark = 6;
	required uint32 last_logout_time = 7;
	required int32 contract_lv = 8;
	required uint32 create_time = 9;
	required int32 novice_mark = 10;
}

message FinishAllQuery {
}

message ChangeLeaderName {
	required string leader_name = 1;
	required int32 mercenary_id = 2;
}


message ChangeLeaderNameRet {
	required Result result = 1;
	required string leader_name = 2;
	required int32 mercenary_id = 3;
}

message UpdateBaseInfo {
	enum BaseInfo {
		max_box_num = 0;
	}
	required BaseInfo base_info_type = 1;
	required int32 new_value = 2;
}

message ChangeNoviceMark {
	required int32 mark_index = 1;
	required bool mark_value = 2;
}

message ChangeNoviceMarkRet {
	required Result result = 1;
	required int32 novice_mark = 2;
}

message BindAccount {
	required string user = 1;
	required string password = 2;
	required string guest_account = 3;
	required string platform = 4;
}

message BindAccountRet {
	required Result result = 1;
}

message HeartBeat {
}

message HeartBeatRet {
}

message ErrorRet {
}

message QueryToken {
	required bool is_refresh = 1;
}

message QueryTokenRet {
}

message UpdateTokenRet{
    required string token = 1;
}

message FeatureConfig {
	required int32 review_switch = 1;
	required int32 magic_switch = 2;
	required int32 resource_switch = 3;
}

message QueryFeatureConfig{

}

message FeatureConfigInfo{
    required string feature_key = 1;
    required bool feature_value = 2;
}

message QueryFeatureConfigRet{
    repeated FeatureConfigInfo feature_list = 1;
}
