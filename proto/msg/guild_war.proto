package msg.guild_war;

enum Result {
    success = 0; 
    failure = 1;                           
    guild_repeat_name = 2;
    guild_is_null = 3;
    to_user_not_staff = 4;
    guild_chairman_not_exit = 5;
    executor_not_chairman = 6;
    guild_repeat_member = 7;
    guild_member_not_dismiss = 8;
    guild_member_max = 9;
    guild_chairman_not_fire = 10;
    guild_chairman_not_transfer = 11;
    guild_create_error = 12;
    guild_chairman_not_vip = 13;
    guild_req_battle_point_less = 14;
    guild_daily_join_limit = 15;
    guild_name_in_keywords = 16;
}

message SeasonConfig {
    required string season_id = 1;
    required int32 round = 2;
    required string season_key = 3;
    required string season_name = 4;
    repeated int32 bonus_genre = 5;
    repeated int32 bonus_factor = 6;
    required uint32 start_time = 7;
    required uint32 ready_end_time = 8;
    required uint32 enter_end_time = 9;
    required uint32 set_troop_end_time = 10;
    required uint32 match_end_time = 11;
    required uint32 fight_end_time = 12;
    required uint32 end_time = 13;
}

message QueryCurSeasonConfig {

}

message GuildScores {
    required string guild_id = 1;
    required int32 war_score = 2;
}

message QueryCurSeasonConfigRet {
    required Result result = 1;
    repeated SeasonConfig season_config_list = 2;
    optional string cur_season_key = 3;
    optional int32 status = 4;
}

message EnterForGuildWar {
    required string guild_id = 1;
    required string guild_name = 2;
    required int32  war_score = 3;
}

message EnterForGuildWarRet {
    required Result result = 1;
    required string season_key = 2;
    required string guild_id = 3;
}

message MatchInfo {
    required string guild_id = 1;
    required string vs_guild_id = 2;
    required string vs_guild_name = 3;
    required int32 vs_guild_server_id = 4;
    required int32 vs_war_score = 5;
    required bool vs_mirror = 6;
}

message GuildWarMatchInfo {
    required int32 begin_index = 1;
    required int32 page_size = 2;
}

message GuildWarMatchInfoRet {
    required Result result = 1;
    required int32 total_size = 2;
    repeated MatchInfo match_infos = 3;
}

message RuneProperty {
    required int32 defense = 1;
    required int32 dodge = 2;
    required int32 speed = 3;
    required int32 authority = 4;
}

message CultivationProperty {
    optional int32 coefficient1 = 1;
    optional int32 coefficient2 = 2;
}

message WeaponInfo {
    required int32 weapon_id = 1;
    required int32 star_level = 2;
}

message TroopInfo {
    required int32 battle_point = 1;
    required int32 defense = 2;
    required int32 dodge = 3;
    required int32 speed = 4;
    required int32 authority = 5;
    required int32 leader_skill_id = 6;
    repeated int32 template_id_list = 7;
    required RuneProperty mine_rune_property = 8;
    required RuneProperty enemy_rune_property = 9;
    repeated string rune_list = 10;
    repeated CultivationProperty cultivation_property = 11;
    optional WeaponInfo weapon_info = 12;
}

message TroopList {
    required string user_id = 1;
    required string template_id = 2;
    required string leader_name = 3;
    required int32 buff_info = 4;
    required TroopInfo troop_info = 5;
}

message FieldTroop {
    repeated TroopList troop_list = 1;
}

message GuildTroopInfo {
    required string season_key = 1;
    required string guild_id = 2;
    repeated FieldTroop field_troop = 3;
}

message GuildTroopInfoRet {
}

message GuildWarResult {
    required string guild_id = 1;
    required string force_season_key = 2;
}

message GuildWarFieldResult {
    required string guild_id = 1;
    required int32 field_index = 2;
    required string force_season_key = 3;
}

message PlayerInfo {
    required string user_id = 1;
    required string leader_name = 2;
    repeated int32 template_id_list = 7;
}

message SingleRecord {
    repeated int32 battle_record = 1;
    required string battle_property = 2;
    required PlayerInfo player1 = 3;
    required PlayerInfo player2 = 4;
    required string win_user_id = 5;
    required int32 self_mirror_win = 6;
}

message FieldRecord {
    required string win_guild_id = 1;
    repeated SingleRecord record_list = 2;
    required int32 troop_num = 3;
    required int32 vs_troop_num = 4;
    required int32 remain_troop_num = 5;
    required int32 vs_remain_troop_num = 6;
    required int32 self_mirror_win = 7;
}

message WarResult {
    required string left_guild_id = 1;
    required string win_guild_id = 2;
    required int32 left_war_score = 3;
    required int32 right_war_score = 4;
    required int32 old_left_war_score = 5;
    required int32 old_right_war_score = 6;
    required int32 self_mirror_win = 7;
}

message GuildRankInfo {
    required string guild_id = 1;
    required string guild_name = 2;
    required int32  war_score = 3;   
}

message GuildWarResultRet {
    required string vs_guild_id = 1;
    required string vs_guild_name = 2;
    required int32 vs_guild_server_id = 3;
    required int32 vs_war_score = 4;
    required WarResult war_result = 5;
}

message GuildWarFieldResultRet {
    required FieldRecord field_record = 1;
}

message TroopComplete {
}

message TroopCompleteRet {
}

message GuildRanklist {
}

message GuildRanklistRet {
    repeated GuildRankInfo guild_rank_list = 1;
} 

message ScoutRival {
    required string guild_id = 1;
}

message GuildWarCheck {
    
}

message GuildWarCheckRet {
    required Result result = 1;
}
