package msg.destiny_weapon;

enum Result {
	success = 1;
	not_enough_point = 2;
	not_enough_resource = 3;
	failure = 4;
	max_weapon_star_level = 5;
	not_get_destiny_weapon = 6;
	not_enough_weapon_num = 7;
	not_enough_star_num = 8;
}

enum UpgradeType {
    once = 0;
    auto = 1;
}

message Query {

}

message QueryRet {
	required int32 weapon_level = 1;
	repeated int32 weapon_ids = 2;
}

message Forge {
}

message ForgeRet {
	required Result result = 1;
}

message ChooseWeapon {
	required int32 weapon_id = 1;
	required int32 formation_id = 2;
}

message ChooseWeaponRet {
	required Result result = 1;
	required int32 weapon_id = 2;
	required int32 formation_id = 3;
}

message NewDestinyWeapon {
	required int32 new_weapon_id = 1;
}


message WeaponStarInfo
{
	required int32 weapon_id = 1;
	required int32 star_level = 2;
	required int32 exp = 3;
}

message QueryWeaponStarInfo {
}

message QueryWeaponStarInfoRet {
	required bool weapon_star_can_upgrade = 1;
	repeated WeaponStarInfo weapon_star_info_list = 2;
}

message WeaponUpgradeStar {
	required int32 weapon_id = 1;
	required UpgradeType upgrade_type = 2;
}

message WeaponUpgradeStarRet {
    required Result result = 1;
	required int32 weapon_id = 2;
	required UpgradeType upgrade_type = 3;
    required int32 star_level = 4;
	required int32 exp = 5;
	required bool is_crit = 6;
	required bool is_upgrade = 7;
}

message GetFinalDestinyWeapon {
}

message GetFinalDestinyWeaponRet {
	required Result result = 1;
}

message UnlockDestinyWeaponStar {
}

message UnlockDestinyWeaponStarRet {
	required Result result = 1;
}