package msg.pvp;

enum Result {
    success = 0;                        // 成功
    failure = 1;
    cd_limit = 2; //挑战cd时间没到
    challenge_limit = 3; //挑战次数不足
    times_limit = 4; // 购买次数已达上限
    not_enough_resource = 5; //血钻不足
    buy_limit = 6;   //当前挑战次数不能购买
    challenge_rank_limit = 7; // 挑战排名限制
    not_in_challenge_time = 8; // 不再挑战时间 
    target_limit = 9; //目标玩家不正确
}

message Query {
}

message RankList {

}

message TargetPlayInfo {
    required string user_id = 1;
    required string leader_name = 2;
    repeated int32  template_id_list = 3;
}

message RankInfo {
    required string user_id = 1;
    required string leader_name = 2;    
    required int32 rank = 3;
    required int32 template_id = 4;
    required int32 server_id = 5;
}

message RankListRet {
    repeated RankInfo rank_list = 1;
    required int32 cur_rank = 2;
    required int32 challenge_times = 3;
    required int32 challenge_cd_end_time = 4;
    required int32 challenge_buy_times = 5;
}

message PvPBattle {
    required int32 challenge_rank = 1;
}

message PvPBattleRet {
    required Result result = 1;
    required bool is_winner = 2;
    required string battle_property = 3;
    repeated int32 battle_record = 4;  //战斗记录
    required TargetPlayInfo challenge_user_info = 5;  
    required int32 challenge_times = 6;
    required int32 challenge_cd_end_time = 7;
}

message PvPTopRank {
    
}

message PvPTopRankRet {
    repeated RankInfo rank_list = 1;
}

message PvPBuyTimes {
    required int32  buy_times = 1;
}

message PvPBuyTimesRet {
    required Result result = 1;
    required int32 challenge_times = 2;
    required int32 challenge_buy_times = 3;
}

message Reward
{
    required int32 reward_type = 1;
    required int32 param1  = 2;
    required int32 param2 = 3;
    optional int32 expire_time = 4;
}

message RewardConvert{                              //奖励兑换信息
    required int32 id = 1;
    repeated int32 req_value = 2;
    repeated Reward rewards = 3;
    optional int32 bag_capacity = 4;
}

message PvPSeason {
}

message PvPSeasonRet {
    required int32  cur_season_end_time = 1;
    required int32  next_season_beg_time = 2;
    repeated RewardConvert reward_list = 3; //奖励兑换列表
    repeated Reward top_reward_list = 4;
    repeated Reward daily_reward_list = 5;
}

